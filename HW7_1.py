''' отсортируйте по убыыванию методом пузырька одномерный целочисленный массив,
 заданный случайными числами на промежутке от -100 по 99.
Выведите на экран исходный и отсортированный список '''
import random
# постановка задачи

SIZE = 10
MIN_ITEM = -100
MAX_ITEM = 99
array = [random.randint(MIN_ITEM, MAX_ITEM) for _ in range(SIZE)]

print(f'Исходный массив:\n{array}')

# решение задачи
def bubbles(array):
    ''''улучшение метода сортировкой рассмотреного на уроке заключалось в следующем:
     1. Изменен диапазон сортировки с len(array)-1, на len(array)-i,
    так как с увеличением  количества сортировок правая (уже отсортированная)
    часть увеличивается и заново ее сортировать нет необходимости;
    2. В случае если возникнет ситуация, когда пройдя по левой (неотсортированной) части массива, не будет
     произведено ни одной перестановки, то необходимости в повторном прохождении этого участка нет.
     Соответсвенно был определен счетчик перестановок и если он = 0, то массив уже отсортирован'''
    i = 1
    while i < len(array):
        numb_replace = 0  # введем переменную которая посчитает сколько раз проитзошла замена элементов
        for j in range(len(array)-i):

            if array[j] < array[j+1]:
                array[j], array[j+1] = array[j+1], array[j]
                numb_replace += 1
        if numb_replace == 0:  # если замен не было, значит  массив уже отсортирован
            return array
        i += 1
    return array

print(f'Массив отсортированный пузырьковым методом:\n{bubbles(array)}')

